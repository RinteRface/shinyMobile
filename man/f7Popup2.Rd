% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f7Popup2.R, R/f7PopupKai.R
\name{f7Popup2}
\alias{f7Popup2}
\title{Title}
\usage{
f7Popup2(
  ...,
  id,
  title = NULL,
  backdrop = TRUE,
  closeByBackdropClick = TRUE,
  closeOnEscape = FALSE,
  animate = TRUE,
  swipeToClose = FALSE,
  fullsize = FALSE,
  closeButton = TRUE,
  closeButtonIcon = f7Icon("arrow_left"),
  session = shiny::getDefaultReactiveDomain()
)

f7Popup2(
  ...,
  id,
  title = NULL,
  backdrop = TRUE,
  closeByBackdropClick = TRUE,
  closeOnEscape = FALSE,
  animate = TRUE,
  swipeToClose = FALSE,
  fullsize = FALSE,
  closeButton = TRUE,
  closeButtonIcon = f7Icon("arrow_left"),
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{...}{UI elements for the body of the popup window.}

\item{id}{Popup unique id. Useful if you want to access the popup state.
input$<id> is TRUE when the popup is opened and inversely.}

\item{title}{Title for the popup window, use \code{NULL} for no title.}

\item{backdrop}{Enables Popup backdrop (dark semi transparent layer behind).
Default to \code{TRUE}.}

\item{closeByBackdropClick}{When enabled, popup will be closed on backdrop click.
Default to \code{TRUE}.}

\item{closeOnEscape}{When enabled, popup will be closed on ESC keyboard key press.
Default to \code{FALSE}.}

\item{animate}{Whether the Popup should be opened/closed with animation or not.
Default to \code{TRUE}.}

\item{swipeToClose}{Whether the Popup can be closed with swipe gesture.
Can be true to allow to close popup with swipes to top and to bottom.
Default to \code{FALSE}.}

\item{fullsize}{Open popup in full width or not. Default to \code{FALSE}.}

\item{closeButton}{Add or not a button to easily close the popup.
Default to \code{TRUE}.}

\item{session}{Shiny session object.}
}
\description{
\code{f7Popup} creates a popup window with any UI content that pops up over App's main content.
Popup as all other overlays is part of so called "Temporary Views".
}
\examples{
if (interactive()) {
 library(shiny)
 library(shinyMobile)
 shinyApp(
   ui = f7Page(
     title = "Popup",
     f7SingleLayout(
      navbar = f7Navbar(
        title = "f7Popup",
        hairline = FALSE,
        shadow = TRUE
      ),
      f7Button("togglePopup", "Toggle Popup")
     )
   ),
   server = function(input, output, session) {

    output$popupContent <- renderPrint(input$text)

    observeEvent(input$togglePopup, {
     f7Popup(
       id = "popup1",
       title = "My first popup",
       f7Text("text", "Popup content", "This is my first popup ever, I swear!"),
       verbatimTextOutput("popupContent")
      )
    })

    observeEvent(input$popup1, {

     popupStatus <- if (input$popup1) "opened" else "closed"

     f7Toast(
      position = "top",
      text = paste("Popup is", popupStatus)
     )
    })
   }
 )
}
}
