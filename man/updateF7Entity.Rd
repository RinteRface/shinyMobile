% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update-app.R
\name{updateF7Entity}
\alias{updateF7Entity}
\title{Update Framework7 entity}
\usage{
updateF7Entity(id, options, session = shiny::getDefaultReactiveDomain())
}
\arguments{
\item{id}{Element id.}

\item{options}{Configuration list. Tightly depends on the entity.
See \url{https://framework7.io/docs/}.}

\item{session}{Shiny session object.}
}
\description{
\code{updateF7Entity} allows to update any Framework7 instance from the server.
For each entity, the list of updatable properties may significantly vary. Please
refer to the Framework7 documentation at \url{https://framework7.io/docs/}.
Currently, \code{updateF7Entity} supports \link{f7Gauge},
\link{f7Swiper}, \link{f7Searchbar},
\link{f7PhotoBrowser}, \link{f7Popup} and
\link{f7ListView}.
}
\examples{
library(shiny)
library(shinyMobile)

app <- shinyApp(
  ui = f7Page(
    title = "Update Entity",
    f7SingleLayout(
      navbar = f7Navbar(title = "Update action sheet instance"),
      f7Segment(
        f7Button(
          inputId = "goButton",
          "Go!",
          fill = FALSE,
          outline = TRUE
        ),
        f7Button(
          inputId = "update",
          "Update config",
          fill = FALSE,
          outline = TRUE
        ),
        f7Button(
          inputId = "reset",
          "Reset",
          fill = FALSE,
          outline = TRUE
        )
      )
    )
  ),
  server = function(input, output, session) {
    observeEvent(input$goButton, {
      f7ActionSheet(
        grid = TRUE,
        id = "action1",
        buttons = list(
          list(
            text = "Notification",
            icon = f7Icon("info"),
            color = NULL
          ),
          list(
            text = "Dialog",
            icon = f7Icon("lightbulb_fill"),
            color = NULL
          )
        )
      )
    })

    observeEvent(input$update, {
      updateF7Entity(
        id = "action1",
        options = list(
          buttons = list(
            list(
              text = "Notification",
              icon = f7Icon("info"),
              color = NULL
            )
          )
        )
      )
    })

    observeEvent(input$reset, {
      updateF7Entity(
        id = "action1",
        options = list(
          buttons = list(
            list(
              text = "Notification",
              icon = f7Icon("info"),
              color = NULL
            ),
            list(
              text = "Dialog",
              icon = f7Icon("lightbulb_fill"),
              color = NULL
            )
          )
        )
      )
    })
  }
)

if (interactive() || identical(Sys.getenv("TESTTHAT"), "true")) app
}
